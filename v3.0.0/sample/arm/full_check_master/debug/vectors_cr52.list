


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 IF               :DEF: __AARCH32
    3 00000000         
    4 00000000                 area             VECTORS, code, readonly
    5 00000000         
    6 00000000                 import           Reset_Handler
    7 00000000                 import           UndefinedInstruction_Handler
    8 00000000                 import           SupervisorCall_Handler
    9 00000000                 import           PrefetchAbort_Handler
   10 00000000                 import           DataAbort_Handler
   11 00000000                 import           IRQ_Handler
   12 00000000                 import           __use_no_semihosting_swi
   13 00000000                 import           __mpu_init
   14 00000000                 import           __main
   15 00000000                 export           __vectors_start
   16 00000000         
   17 00000000                 entry
   18 00000000         
   19 00000000         __vectors_start
   20 00000000         
   21 00000000 EAFFFFFE        b                Reset_Handler ; 0x00
   22 00000004 EA000005        b                UDF_EXC_VECTORS ; 0x04
   23 00000008 EA000008        b                SVC_EXC_VECTORS ; 0x08
   24 0000000C EA00000B        b                PAB_EXC_VECTORS ; 0x0c
   25 00000010 EA00000E        b                DAB_EXC_VECTORS ; 0x10
   26 00000014 E320F000        nop                          ; 0x14
   27 00000018 EA000010        b                IRQ_EXC_VECTORS ; 0x18
   28 0000001C         FIQ_EXC_VECTORS                      ; 0x1c
   29 0000001C         ; If you want to use fast interrupt, place its service c
                       ode here.
   30 0000001C         ; Maximum code size allowed is 4kB
   31 0000001C EAFFFFFE        b                FIQ_EXC_VECTORS
   32 00000020         
   33 00000020         UDF_EXC_VECTORS
   34 00000020 E92D5C0F        push             {r0-r3,r10-r12,lr}
   35 00000024 EBFFFFFE        bl               UndefinedInstruction_Handler
   36 00000028 E8BD5C0F        pop              {r0-r3,r10-r12,lr}
   37 0000002C E160006E        eret
   38 00000030         
   39 00000030         SVC_EXC_VECTORS
   40 00000030 E92D5C0F        push             {r0-r3,r10-r12,lr}
   41 00000034 EBFFFFFE        bl               SupervisorCall_Handler
   42 00000038 E8BD5C0F        pop              {r0-r3,r10-r12,lr}
   43 0000003C E160006E        eret
   44 00000040         
   45 00000040         PAB_EXC_VECTORS
   46 00000040 E92D5C0F        push             {r0-r3,r10-r12,lr}
   47 00000044 EBFFFFFE        bl               PrefetchAbort_Handler
   48 00000048 E8BD5C0F        pop              {r0-r3,r10-r12,lr}
   49 0000004C E160006E        eret
   50 00000050         
   51 00000050         DAB_EXC_VECTORS
   52 00000050 E92D5C0F        push             {r0-r3,r10-r12,lr}
   53 00000054 EBFFFFFE        bl               DataAbort_Handler
   54 00000058 E8BD5C0F        pop              {r0-r3,r10-r12,lr}
   55 0000005C E160006E        eret
   56 00000060         
   57 00000060         IRQ_EXC_VECTORS
   58 00000060 E92D5C0F        push             {r0-r3,r10-r12,lr}



ARM Macro Assembler    Page 2 


   59 00000064 EBFFFFFE        bl               IRQ_Handler
   60 00000068 E8BD5C0F        pop              {r0-r3,r10-r12,lr}
   61 0000006C E160006E        eret
   62 00000070         
   63 00000070         vectors_end
   64 00000070         
   65 00000070                 ENDIF
   66 00000070         
   67 00000070                 end
Command Line: --cpu=Cortex-R52 -m -I/design01/rcarv3ufed_master/common_rvc/rcar
v3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/i2c0/full_check_master -I/design01/rcarv3ufe
d_master/common_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/include --predefine=
"__AARCH32 SETL {TRUE}" --predefine="__USE_DDR SETL {TRUE}" --list=vectors_cr52
.list /design01/rcarv3ufed_master/common_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RT
L/ct/include/rcar_v3u/startup/vectors_cr52.s
