
/******************************************************************************
 * This file has been generated by Module Structure Generator
 * 2082 - Hau Sy Le - hau.le.eb@renesas.com
 ******************************************************************************
 * File name:		kcrc.h
 * Date created:	11/1/2018 2:55:30 PM
 * PC name:			RVC-LT-410219
 * User name:		haule2
******************************************************************************/

#ifndef	KCRC_H_
#define	KCRC_H_

/* Standard C libraries */
#include <stdint.h>
#include <stdbool.h>

/* R-Car V3U drives */
#include <global.h>
#include <rcar_v3u/v3u.h>
#include <rcar_v3u/drivers/sim_utils.h>
#include <rcar_v3u/drivers/i2c.h>
#include <rcar_v3u/drivers/pfc.h>
#include <rcar_v3u/drivers/cpg.h>
#include <rcar_v3u/drivers/gic.h>
#include <rcar_v3u/drivers/dmac.h>
#include <rcar_v3u/drivers/kcrc.h>

/******************************************************************************
 *	Name	    Offset	Size	R/W
 ******************************************************************************
 *	KCRCmDIN	0x0	    32	    RW
 *	DIN	        0x0	    32	    RW
 *	KCRCmDOUT	0x80	32	    RW
 *	DOUT	    0x80	32	    RW
 *	KCRCmCTL	0x90	32	    RW
 *	KCRCmPOLY	0xA0	32	    RW
 *	POLY	    0xA0	32	    RW
 *	KCRCmXOR	0xB0	32	    RW
 *	XOR	        0xB0	32	    RW
******************************************************************************/
typedef struct
{
	union
	{
		/* Name:	KCRCmDIN
		 * Offset:	0x0
		 * Size:	32 bits */
		__RW	uint32_t	KCRCmDIN;

		/* Name:	DIN
		 * Offset:	0x0
		 * Size:	32 bits */
		__RW	uint32_t	DIN;
	};

	/* Name:	KCRC_RES_0x4
	 * Offset:	0x4
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x4;

	/* Name:	KCRC_RES_0x8
	 * Offset:	0x8
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x8;

	/* Name:	KCRC_RES_0xC
	 * Offset:	0xC
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0xC;

	/* Name:	KCRC_RES_0x10
	 * Offset:	0x10
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x10;

	/* Name:	KCRC_RES_0x14
	 * Offset:	0x14
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x14;

	/* Name:	KCRC_RES_0x18
	 * Offset:	0x18
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x18;

	/* Name:	KCRC_RES_0x1C
	 * Offset:	0x1C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x1C;

	/* Name:	KCRC_RES_0x20
	 * Offset:	0x20
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x20;

	/* Name:	KCRC_RES_0x24
	 * Offset:	0x24
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x24;

	/* Name:	KCRC_RES_0x28
	 * Offset:	0x28
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x28;

	/* Name:	KCRC_RES_0x2C
	 * Offset:	0x2C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x2C;

	/* Name:	KCRC_RES_0x30
	 * Offset:	0x30
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x30;

	/* Name:	KCRC_RES_0x34
	 * Offset:	0x34
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x34;

	/* Name:	KCRC_RES_0x38
	 * Offset:	0x38
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x38;

	/* Name:	KCRC_RES_0x3C
	 * Offset:	0x3C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x3C;

	/* Name:	KCRC_RES_0x40
	 * Offset:	0x40
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x40;

	/* Name:	KCRC_RES_0x44
	 * Offset:	0x44
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x44;

	/* Name:	KCRC_RES_0x48
	 * Offset:	0x48
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x48;

	/* Name:	KCRC_RES_0x4C
	 * Offset:	0x4C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x4C;

	/* Name:	KCRC_RES_0x50
	 * Offset:	0x50
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x50;

	/* Name:	KCRC_RES_0x54
	 * Offset:	0x54
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x54;

	/* Name:	KCRC_RES_0x58
	 * Offset:	0x58
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x58;

	/* Name:	KCRC_RES_0x5C
	 * Offset:	0x5C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x5C;

	/* Name:	KCRC_RES_0x60
	 * Offset:	0x60
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x60;

	/* Name:	KCRC_RES_0x64
	 * Offset:	0x64
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x64;

	/* Name:	KCRC_RES_0x68
	 * Offset:	0x68
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x68;

	/* Name:	KCRC_RES_0x6C
	 * Offset:	0x6C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x6C;

	/* Name:	KCRC_RES_0x70
	 * Offset:	0x70
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x70;

	/* Name:	KCRC_RES_0x74
	 * Offset:	0x74
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x74;

	/* Name:	KCRC_RES_0x78
	 * Offset:	0x78
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x78;

	/* Name:	KCRC_RES_0x7C
	 * Offset:	0x7C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x7C;

	union
	{
		/* Name:	KCRCmDOUT
		 * Offset:	0x80
		 * Size:	32 bits */
		__RW	uint32_t	KCRCmDOUT;

		/* Name:	DOUT
		 * Offset:	0x80
		 * Size:	32 bits */
		__RW	uint32_t	DOUT;
	};

	/* Name:	KCRC_RES_0x84
	 * Offset:	0x84
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x84;

	/* Name:	KCRC_RES_0x88
	 * Offset:	0x88
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x88;

	/* Name:	KCRC_RES_0x8C
	 * Offset:	0x8C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x8C;

	union
	{
		/* Name:	KCRCmCTL
		 * Offset:	0x90
		 * Size:	32 bits */
		__RW	uint32_t	KCRCmCTL;
		struct
		{
			__RW	uint32_t	DW	:3;
			__RO	uint32_t	KCRCmCTL_RES_3	:1;
			__RW	uint32_t	CMD2	:1;
			__RW	uint32_t	CMD1	:1;
			__RO	uint32_t	KCRCmCTL_RES_6	:1;
			__RO	uint32_t	KCRCmCTL_RES_7	:1;
			__RW	uint32_t	CMD0	:1;
			__RO	uint32_t	KCRCmCTL_RES_9	:1;
			__RO	uint32_t	KCRCmCTL_RES_10	:1;
			__RO	uint32_t	KCRCmCTL_RES_11	:1;
			__RO	uint32_t	KCRCmCTL_RES_12	:1;
			__RO	uint32_t	KCRCmCTL_RES_13	:1;
			__RO	uint32_t	KCRCmCTL_RES_14	:1;
			__RO	uint32_t	KCRCmCTL_RES_15	:1;
			__RW	uint32_t	PSIZE	:5;
			__RO	uint32_t	KCRCmCTL_RES_21	:1;
			__RO	uint32_t	KCRCmCTL_RES_22	:1;
			__RO	uint32_t	KCRCmCTL_RES_23	:1;
			__RO	uint32_t	KCRCmCTL_RES_24	:1;
			__RO	uint32_t	KCRCmCTL_RES_25	:1;
			__RO	uint32_t	KCRCmCTL_RES_26	:1;
			__RO	uint32_t	KCRCmCTL_RES_27	:1;
			__RO	uint32_t	KCRCmCTL_RES_28	:1;
			__RO	uint32_t	KCRCmCTL_RES_29	:1;
			__RO	uint32_t	KCRCmCTL_RES_30	:1;
			__RO	uint32_t	KCRCmCTL_RES_31	:1;
		};
	};

	/* Name:	KCRC_RES_0x94
	 * Offset:	0x94
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x94;

	/* Name:	KCRC_RES_0x98
	 * Offset:	0x98
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x98;

	/* Name:	KCRC_RES_0x9C
	 * Offset:	0x9C
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0x9C;

	union
	{
		/* Name:	KCRCmPOLY
		 * Offset:	0xA0
		 * Size:	32 bits */
		__RW	uint32_t	KCRCmPOLY;

		/* Name:	POLY
		 * Offset:	0xA0
		 * Size:	32 bits */
		__RW	uint32_t	POLY;
	};

	/* Name:	KCRC_RES_0xA4
	 * Offset:	0xA4
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0xA4;

	/* Name:	KCRC_RES_0xA8
	 * Offset:	0xA8
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0xA8;

	/* Name:	KCRC_RES_0xAC
	 * Offset:	0xAC
	 * Size:	32 bits */
	__RO	uint32_t	KCRC_RES_0xAC;

	union
	{
		/* Name:	KCRCmXOR
		 * Offset:	0xB0
		 * Size:	32 bits */
		__RW	uint32_t	KCRCmXOR;

		/* Name:	XOR
		 * Offset:	0xB0
		 * Size:	32 bits */
		__RW	uint32_t	XOR;
    };

} KCRC_t;

#define KCRC_32B_ETHERNET   0x04c11db7
#define KCRC_16B_CCITT      0x00001021
#define KCRC_8B_SAE_J1850   0x0000001d
#define KCRC_8B_2F          0x0000002f
#define KCRC_32B32C         0x1edc6f41
#define KCRC_POLY_8B        0x7
#define KCRC_POLY_16B       0xf
#define KCRC_POLY_32B       0x1f
#define KCRC_MODE_N         0
#define KCRC_MODE_R         1
#define KCRC_MODE_M         0
#define KCRC_MODE_L         1
#define KCRC_32B_INPUT      0
#define KCRC_16B_INPUT      1
#define KCRC_8B_INPUT       3


#endif	/* KCRC_H_ */

