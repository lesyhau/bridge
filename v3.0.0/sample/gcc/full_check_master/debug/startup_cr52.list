ARM GAS  /media/electronicdog/Windows/Users/lesyh/OneDrive/Documents/Renesas/bridge/v3.0.0/sample/gcc/full_check_master/../include/rcar_v3u/startup/startup_cr52.src 			page 1


   1              	
   2              	    .ifdef	__arm__
   3              	
   4              	    .section    startup
   5              		
   6              	    .global Reset_Handler
   7              	    .global UndefinedInstruction_Handler
   8              	    .global SupervisorCall_Handler
   9              	    .global PrefetchAbort_Handler
  10              	    .global DataAbort_Handler
  11              	    .global IRQ_Handler
  12              		.global __use_no_semihosting_swi
  13              	    .global __mpu_init
  14              	    .global main
  15              	    .global __vectors_start
  16              		
  17              	    
  18 0000 FEFFFFEA 	    b   Reset_Handler   // 0x00
  19 0004 050000EA 	    b   UDF_EXC         // 0x04
  20 0008 080000EA 	    b   SVC_EXC         // 0x08
  21 000c 0B0000EA 	    b   PAB_EXC         // 0x0c
  22 0010 0E0000EA 	    b   DAB_EXC         // 0x10
  23 0014 00F020E3 	    nop                 // 0x14
  24 0018 100000EA 	    b   IRQ_EXC	        // 0x18
  25              	FIQ_EXC:                // 0x1c
  26              	    // If you want to use fast interrupt, place its service code here.
  27              	    // Maximum code size allowed is 4kB
  28 001c FEFFFFEA 	    b   FIQ_EXC
  29              	    
  30              	UDF_EXC:
  31 0020 0F5C2DE9 	    push    {r0-r3,r10-r12,lr}
  32 0024 FEFFFFEB 	    bl  UndefinedInstruction_Handler
  33 0028 0F5CBDE8 	    pop {r0-r3,r10-r12,lr}
  34 002c 6E0060E1 	    eret
  35              	
  36              	SVC_EXC:
  37 0030 0F5C2DE9 	    push    {r0-r3,r10-r12,lr}
  38 0034 FEFFFFEB 	    bl  SupervisorCall_Handler
  39 0038 0F5CBDE8 	    pop {r0-r3,r10-r12,lr}
  40 003c 6E0060E1 	    eret
  41              	
  42              	PAB_EXC:
  43 0040 0F5C2DE9 	    push    {r0-r3,r10-r12,lr}
  44 0044 FEFFFFEB 	    bl  PrefetchAbort_Handler
  45 0048 0F5CBDE8 	    pop {r0-r3,r10-r12,lr}
  46 004c 6E0060E1 	    eret
  47              	
  48              	DAB_EXC:
  49 0050 0F5C2DE9 	    push    {r0-r3,r10-r12,lr}
  50 0054 FEFFFFEB 	    bl  DataAbort_Handler
  51 0058 0F5CBDE8 	    pop {r0-r3,r10-r12,lr}
  52 005c 6E0060E1 	    eret
  53              	
  54              	IRQ_EXC:
  55 0060 0F5C2DE9 	    push    {r0-r3,r10-r12,lr}
  56 0064 FEFFFFEB 	    bl  IRQ_Handler
  57 0068 0F5CBDE8 	    pop {r0-r3,r10-r12,lr}
ARM GAS  /media/electronicdog/Windows/Users/lesyh/OneDrive/Documents/Renesas/bridge/v3.0.0/sample/gcc/full_check_master/../include/rcar_v3u/startup/startup_cr52.src 			page 2


  58 006c 6E0060E1 	    eret
  59              	
  60              	Reset_Handler:
  61              	
  62              	    // Initialize MPU
  63 0070 FEFFFFEB 	    bl  __mpu_init
  64              	
  65              	    // Set the CPACR for access to CP10 and CP11 (the FPU coprocessors)
  66 0074 0F06A0E3 	    ldr r0, = (0xF << 20)
  67 0078 500F01EE 	    mcr p15, 0, r0, c1, c0, 2
  68              	    // Set the FPEXC EN bit to enable the FPU
  69 007c 0030A0E3 	    mov  r3, #0x0
  70 0080 003044E3 	    movt r3, #0x4000
  71 0084 103AE8EE 	    vmsr FPEXC, r3
  72              	
  73              	    // Change vector base address
  74 0088 08009FE5 	    ldr r0, = __vectors_start
  75 008c 100F8CEE 	    mcr p15, 4, r0, c12, c0, 0
  76 0090 100F0CEE 	    mcr p15, 0, r0, c12, c0, 0
  77              	
  78              	    .ifdef	__USE_DDR
  79              	
  80              	    // Copy DDR init code from external memory to SRAM
  81              	    mov     r0, #0x0
  82              	    movt    r0, #0xe730
  83              	    // sar
  84              	    ldr     r1, = __ddr_init_start
  85              	    str     r1, [r0, #0x0]
  86              	    // dar
  87              	    mov     r1, #0x0
  88              	    movt    r1, #0xe630
  89              	    ldr     r2, = __ddr_init_start
  90              	    add     r1, r1, r2
  91              	    str     r1, [r0, #0x4]
  92              	    // tcr
  93              	    ldr     r1, = __ddr_init_end
  94              	    ldr     r2, = __ddr_init_start
  95              	    sub     r1, r1, r2
  96              	    lsr     r1, r1, #6
  97              	    add     r1, r1, #1
  98              	    str     r1, [r0, #0x8]
  99              	    // chcr
 100              	    mov     r1, #0x5409
 101              	    movt    r1, #0x0010
 102              	    str     r1, [r0, #0xc]
 103              	    // dmaor
 104              	    mov     r0, #0x0
 105              	    movt    r0, #0xe735
 106              	    mov     r1, #0x1
 107              	    str     r1, [r0, #0x60]
 108              	    // wait for TE
 109              	    mov     r0, #0
 110              	    movt    r0, #0xe730
 111              	wait_TE:
 112              	    ldr     r1, [r0, #0xc]
 113              	    mov     r2, #0x2
 114              	    and     r1, r1, r2
ARM GAS  /media/electronicdog/Windows/Users/lesyh/OneDrive/Documents/Renesas/bridge/v3.0.0/sample/gcc/full_check_master/../include/rcar_v3u/startup/startup_cr52.src 			page 3


 115              	    cmp     r1, r2
 116              	    bne     wait_TE
 117              	    // clear TE, DE
 118              	    mov     r2, #0x3
 119              	    mvn     r2, r2
 120              	    and     r1, r1, r2
 121              	    str     r1, [r0, #0xc]
 122              	    // clear dmaor
 123              	    mov     r0, #0x0
 124              	    movt    r0, #0xe735
 125              	    mov     r1, #0x0
 126              	    str     r1, [r0, #0x60]
 127              	
 128              	    // Jump to DDR init code in SRAM
 129              	    ldr r0, = 0xe6300000 + __ddr_init_start
 130              	    mov pc, r0
 131              	
 132              	__ddr_init_start:
 133              	    include rel_dbsc4_init_lpddr4_4266_CL40WL18_181012_cr52.h
 134              	    // Give the control to the C library
 135              	    ldr r0, = main
 136              	    mov pc, r0
 137              	__ddr_init_end:
 138              	
 139              	    .else
 140              	
 141              	    // Give the control to the C library
 142 0094 FEFFFFEA 	    b   main
 143              	
 144              	    .endif
 145              	    .endif
 146              	
 147 0098 00000000 	    .end
