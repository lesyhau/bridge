


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 area             STARTUP, code, readonly
    3 00000000         
    4 00000000                 export           Reset_Handler
    5 00000000                 import           UndefinedInstruction_Handler
    6 00000000                 import           SupervisorCall_Handler
    7 00000000                 import           PrefetchAbort_Handler
    8 00000000                 import           DataAbort_Handler
    9 00000000                 import           IRQ_Handler
   10 00000000                 import           __use_no_semihosting_swi
   11 00000000                 import           __mpu_init
   12 00000000                 import           __main
   13 00000000                 import           ddr_init_start
   14 00000000                 import           ddr_init_end
   15 00000000                 import           vectors_start
   16 00000000         
   17 00000000                 entry
   18 00000000         
   19 00000000 E59FF018        ldr              pc, RST_EXC_ADDR ; 0x00
   20 00000004 E59FF018        ldr              pc, UDF_EXC_ADDR ; 0x04
   21 00000008 E59FF018        ldr              pc, SVC_EXC_ADDR ; 0x08
   22 0000000C E59FF018        ldr              pc, PAB_EXC_ADDR ; 0x0c
   23 00000010 E59FF018        ldr              pc, DAB_EXC_ADDR ; 0x10
   24 00000014 E320F000        nop                          ; 0x14
   25 00000018 E59FF014        ldr              pc, IRQ_EXC_ADDR ; 0x18
   26 0000001C         FIQ_EXC_ADDR                         ; 0x1c
   27 0000001C         ; If you want to use fast interrupt, place its service c
                       ode here.
   28 0000001C         ; Maximum code size allowed is 4kB
   29 0000001C EAFFFFFE        b                FIQ_EXC_ADDR
   30 00000020         
   31 00000020 00000000 
                       RST_EXC_ADDR
                               dcd              RST_EXC
   32 00000024 00000000 
                       UDF_EXC_ADDR
                               dcd              UDF_EXC
   33 00000028 00000000 
                       SVC_EXC_ADDR
                               dcd              SVC_EXC
   34 0000002C 00000000 
                       PAB_EXC_ADDR
                               dcd              PAB_EXC
   35 00000030 00000000 
                       DAB_EXC_ADDR
                               dcd              DAB_EXC
   36 00000034 00000000 
                       IRQ_EXC_ADDR
                               dcd              IRQ_EXC
   37 00000038         
   38 00000038         RST_EXC
   39 00000038 EAFFFFFE        b                Reset_Handler
   40 0000003C         
   41 0000003C         UDF_EXC
   42 0000003C EBFFFFFE        bl               UndefinedInstruction_Handler
   43 00000040 E160006E        eret
   44 00000044         
   45 00000044         SVC_EXC
   46 00000044 EBFFFFFE        bl               SupervisorCall_Handler



ARM Macro Assembler    Page 2 


   47 00000048 E160006E        eret
   48 0000004C         
   49 0000004C         PAB_EXC
   50 0000004C EBFFFFFE        bl               PrefetchAbort_Handler
   51 00000050 E160006E        eret
   52 00000054         
   53 00000054         DAB_EXC
   54 00000054 EBFFFFFE        bl               DataAbort_Handler
   55 00000058 E160006E        eret
   56 0000005C         
   57 0000005C         IRQ_EXC
   58 0000005C EBFFFFFE        bl               IRQ_Handler
   59 00000060 E160006E        eret
   60 00000064         
   61 00000064         Reset_Handler
   62 00000064         
   63 00000064         ; Initialize MPU
   64 00000064 EBFFFFFE        bl               __mpu_init
   65 00000068         
   66 00000068         ; Set the CPACR for access to CP10 and CP11 (the FPU cop
                       rocessors)
   67 00000068 E3A0060F        ldr              r0, = (0xF << 20)
   68 0000006C EE010F50        mcr              p15, 0, r0, c1, c0, 2
   69 00000070         ; Set the FPEXC EN bit to enable the FPU
   70 00000070 E3A03000        mov              r3, #0x0
   71 00000074 E3443000        movt             r3, #0x4000
   72 00000078 EEE83A10        vmsr             FPEXC, r3
   73 0000007C         
   74 0000007C         ; Change vector base address
   75 0000007C E59F00A8        ldr              r0, = vectors_start
   76 00000080 EE8C0F10        mcr              p15, 4, r0, c12, c0, 0
   77 00000084 EE0C0F10        mcr              p15, 0, r0, c12, c0, 0
   78 00000088         
   79 00000088                 IF               EXECUTE_LOCATION = "DDR"
   80 00000088         
   81 00000088         ; Copy DDR init code from external memory to SRAM
   82 00000088 E3A00000        mov              r0, #0x0
   83 0000008C E34E0730        movt             r0, #0xe730
   84 00000090         ; sar
   85 00000090 E59F1098        ldr              r1, = ddr_init_start
   86 00000094 E5801000        str              r1, [r0, #0x0]
   87 00000098         ; dar
   88 00000098 E3A01000        mov              r1, #0x0
   89 0000009C E34E1630        movt             r1, #0xe630
   90 000000A0 E59F2088        ldr              r2, = ddr_init_start
   91 000000A4 E0811002        add              r1, r1, r2
   92 000000A8 E5801004        str              r1, [r0, #0x4]
   93 000000AC         ; tcr
   94 000000AC E59F1080        ldr              r1, = ddr_init_end
   95 000000B0 E59F2078        ldr              r2, = ddr_init_start
   96 000000B4 E0411002        sub              r1, r1, r2
   97 000000B8 E1A01321        lsr              r1, r1, #6
   98 000000BC E2811001        add              r1, r1, #1
   99 000000C0 E5801008        str              r1, [r0, #0x8]
  100 000000C4         ; chcr
  101 000000C4 E3051409        mov              r1, #0x5409
  102 000000C8 E3401010        movt             r1, #0x0010
  103 000000CC E580100C        str              r1, [r0, #0xc]
  104 000000D0         ; dmaor



ARM Macro Assembler    Page 3 


  105 000000D0 E3A00000        mov              r0, #0x0
  106 000000D4 E34E0735        movt             r0, #0xe735
  107 000000D8 E3A01001        mov              r1, #0x1
  108 000000DC E5801060        str              r1, [r0, #0x60]
  109 000000E0         ; wait for TE
  110 000000E0 E3A00000        mov              r0, #0
  111 000000E4 E34E0730        movt             r0, #0xe730
  112 000000E8         wait_TE
  113 000000E8 E5903008        ldr              r3, [r0, #0x8] ; Check TCR for 
                                                            tarmac log debug on
                                                            ly
  114 000000EC E590100C        ldr              r1, [r0, #0xc]
  115 000000F0 E3A02002        mov              r2, #0x2
  116 000000F4 E0011002        and              r1, r1, r2
  117 000000F8 E1510002        cmp              r1, r2
  118 000000FC 1AFFFFF9        bne              wait_TE
  119 00000100         ; clear TE, DE
  120 00000100 E3A02003        mov              r2, #0x3
  121 00000104 E1E02002        mvn              r2, r2
  122 00000108 E0011002        and              r1, r1, r2
  123 0000010C E580100C        str              r1, [r0, #0xc]
  124 00000110         ; clear dmaor
  125 00000110 E3A00000        mov              r0, #0x0
  126 00000114 E34E0735        movt             r0, #0xe735
  127 00000118 E3A01000        mov              r1, #0x0
  128 0000011C E5801060        str              r1, [r0, #0x60]
  129 00000120         
  130 00000120         ; Jump to DDR init code in SRAM
  131 00000120 E59F0000        ldr              r0, {pc}+8
  132 00000124 E1A0F000        mov              pc, r0
  133 00000128 E6300000        dcd              0xe6300000 + ddr_init_start
  134 0000012C         
  135 0000012C                 ELSE
  140                          ENDIF
  141 0000012C         
  142 0000012C                 end
              00000000 
              00000000 
              00000000 
Command Line: --cpu=Cortex-R52 -m -I/design01/rcarv3ufed_master/common_rvc/rcar
v3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/i2c0/full_test -I/design01/rcarv3ufed_master
/common_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/include --predefine="EXECUTE
_LOCATION SETS \"DDR\"" --list=startup_cr52.list /design01/rcarv3ufed_master/co
mmon_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/include/rcar_v3u/startup/startu
p_cr52.s
