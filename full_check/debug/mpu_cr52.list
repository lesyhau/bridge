


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 IF               :DEF: __AARCH32
    3 00000000         
    4 00000000         ; HPRBAR.SH
    5 00000000 00000003 
                       SH_POS  equ              3
    6 00000000 00000000 
                       NON_SHAREABLE
                               equ              (0 << SH_POS)
    7 00000000 00000010 
                       OUT_SHAREABLE
                               equ              (2 << SH_POS)
    8 00000000 00000018 
                       IN_SHAREABLE
                               equ              (3 << SH_POS)
    9 00000000         
   10 00000000         ; HPRBAR.AP
   11 00000000 00000001 
                       AP_POS  equ              1
   12 00000000 00000000 
                       RW_EL2  equ              (0 << AP_POS)
   13 00000000 00000002 
                       RW      equ              (1 << AP_POS)
   14 00000000 00000004 
                       RO_EL2  equ              (2 << AP_POS)
   15 00000000 00000006 
                       RO      equ              (3 << AP_POS)
   16 00000000         
   17 00000000         ; HPRBAR.XN
   18 00000000 00000000 
                       XN_POS  equ              0
   19 00000000 00000001 
                       EXECUTE_NEVER
                               equ              (1 << XN_POS)
   20 00000000 00000000 
                       EXECUTABLE
                               equ              (0 << XN_POS)
   21 00000000         
   22 00000000         ; HPRLAR.AttrIndx
   23 00000000 00000001 
                       AttrIndx_POS
                               equ              1
   24 00000000 00000000 
                       ATTR0   equ              (0 << AttrIndx_POS)
   25 00000000 00000002 
                       ATTR1   equ              (1 << AttrIndx_POS)
   26 00000000 00000004 
                       ATTR2   equ              (2 << AttrIndx_POS)
   27 00000000 00000006 
                       ATTR3   equ              (3 << AttrIndx_POS)
   28 00000000 00000008 
                       ATTR4   equ              (4 << AttrIndx_POS)
   29 00000000 0000000A 
                       ATTR5   equ              (5 << AttrIndx_POS)
   30 00000000 0000000C 
                       ATTR6   equ              (6 << AttrIndx_POS)
   31 00000000 0000000E 
                       ATTR7   equ              (7 << AttrIndx_POS)
   32 00000000 00000010 



ARM Macro Assembler    Page 2 


                       ATTR8   equ              (8 << AttrIndx_POS)
   33 00000000 00000012 
                       ATTR9   equ              (9 << AttrIndx_POS)
   34 00000000 00000014 
                       ATTR30  equ              (10 << AttrIndx_POS)
   35 00000000 00000016 
                       ATTR31  equ              (11 << AttrIndx_POS)
   36 00000000 00000018 
                       ATTR32  equ              (12 << AttrIndx_POS)
   37 00000000 0000001A 
                       ATTR33  equ              (13 << AttrIndx_POS)
   38 00000000 0000001C 
                       ATTR34  equ              (14 << AttrIndx_POS)
   39 00000000 0000001E 
                       ATTR35  equ              (15 << AttrIndx_POS)
   40 00000000         
   41 00000000         ; HPRLAR.EN
   42 00000000 00000000 
                       EN_POS  equ              0
   43 00000000 00000001 
                       REGION_ENABLE
                               equ              (1 << EN_POS)
   44 00000000         
   45 00000000                 area             MPU_INIT, code, readonly
   46 00000000         
   47 00000000                 export           __mpu_init
   48 00000000                 export           __mpu_init_el1
   49 00000000         
   50 00000000                 entry
   51 00000000         
   52 00000000         __mpu_init
   53 00000000         
   54 00000000         ; Define memory regions attribute
   55 00000000         ; Attribute 0: 0xff Normal, Outer write-back non-transie
                       nt, RW allocate, Inner write-back non-transient
   56 00000000         ; Attribute 1: 0x04 Device, nGnRE
   57 00000000         ; Attribute 2: 0x44 Normal, Outer non-cacheable, Inner n
                       on-cacheable
   58 00000000         ; Attribute 3: 0x00 Device, nGnRnE
   59 00000000 E30004FF        mov              r0, #0x04ff
   60 00000004 E3400044        movt             r0, #0x0044
   61 00000008 EE8A0F12        mcr              p15, 4, r0, c10, c2, 0
   62 0000000C E3A00CBB        mov              r0, #0xbb00
   63 00000010 E34D0DEE        movt             r0, #0xddee
   64 00000014 EE8A0F32        mcr              p15, 4, r0, c10, c2, 1
   65 00000018         
   66 00000018         ; BSC
   67 00000018 E3A00000        mov              r0, #0
   68 0000001C EE860F32        mcr              p15, 4, r0, c6, c2, 1
   69 00000020 E3A00002        mov              r0, #(((0x00000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
   70 00000024 E3400000        movt             r0, #(((0x00000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
   71 00000028 EE860F13        mcr              p15, 4, r0, c6, c3, 0
   72 0000002C E30F0FC1        mov              r0, #(((0x07ffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
   73 00000030 E34007FF        movt             r0, #(((0x07ffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)



ARM Macro Assembler    Page 3 


   74 00000034 EE860F33        mcr              p15, 4, r0, c6, c3, 1
   75 00000038         
   76 00000038         ; RPC
   77 00000038 E3A00001        mov              r0, #1
   78 0000003C EE860F32        mcr              p15, 4, r0, c6, c2, 1
   79 00000040 E3A00002        mov              r0, #(((0x08000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
   80 00000044 E3400800        movt             r0, #(((0x08000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
   81 00000048 EE860F13        mcr              p15, 4, r0, c6, c3, 0
   82 0000004C E30F0FC1        mov              r0, #(((0x0fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
   83 00000050 E3400FFF        movt             r0, #(((0x0fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
   84 00000054 EE860F33        mcr              p15, 4, r0, c6, c3, 1
   85 00000058         
   86 00000058         ; BSC
   87 00000058 E3A00002        mov              r0, #2
   88 0000005C EE860F32        mcr              p15, 4, r0, c6, c2, 1
   89 00000060 E3A00002        mov              r0, #(((0x10000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
   90 00000064 E3410000        movt             r0, #(((0x10000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
   91 00000068 EE860F13        mcr              p15, 4, r0, c6, c3, 0
   92 0000006C E30F0FC1        mov              r0, #(((0x1fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
   93 00000070 E3410FFF        movt             r0, #(((0x1fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
   94 00000074 EE860F33        mcr              p15, 4, r0, c6, c3, 1
   95 00000078         
   96 00000078         ; RPC
   97 00000078 E3A00003        mov              r0, #3
   98 0000007C EE860F32        mcr              p15, 4, r0, c6, c2, 1
   99 00000080 E3A00002        mov              r0, #(((0x20000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  100 00000084 E3420000        movt             r0, #(((0x20000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  101 00000088 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  102 0000008C E30F0FC1        mov              r0, #(((0x3fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  103 00000090 E3430FFF        movt             r0, #(((0x3fffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  104 00000094 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  105 00000098         
  106 00000098         ; SDRAM
  107 00000098 E3A00004        mov              r0, #4
  108 0000009C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  109 000000A0 E3A00002        mov              r0, #(((0x40000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  110 000000A4 E3440000        movt             r0, #(((0x40000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  111 000000A8 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  112 000000AC E30F0FC1        mov              r0, #(((0xbfffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  113 000000B0 E34B0FFF        movt             r0, #(((0xbfffffff :and: (:not:



ARM Macro Assembler    Page 4 


(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  114 000000B4 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  115 000000B8         
  116 000000B8         ; PCIE
  117 000000B8 E3A00005        mov              r0, #5
  118 000000BC EE860F32        mcr              p15, 4, r0, c6, c2, 1
  119 000000C0 E3A00002        mov              r0, #(((0xc0000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  120 000000C4 E34C0000        movt             r0, #(((0xc0000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  121 000000C8 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  122 000000CC E30F0FC1        mov              r0, #(((0xdfffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  123 000000D0 E34D0FFF        movt             r0, #(((0xdfffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  124 000000D4 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  125 000000D8         
  126 000000D8         ; Peripheral
  127 000000D8 E3A00006        mov              r0, #6
  128 000000DC EE860F32        mcr              p15, 4, r0, c6, c2, 1
  129 000000E0 E3A00002        mov              r0, #(((0xe0000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  130 000000E4 E34E0000        movt             r0, #(((0xe0000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  131 000000E8 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  132 000000EC E30F0FC7        mov              r0, #(((0xe62fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) :and: 0x0000fff
f)
  133 000000F0 E34E062F        movt             r0, #(((0xe62fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) >> 16)
  134 000000F4 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  135 000000F8         
  136 000000F8         ; SRAM
  137 000000F8 E3A00007        mov              r0, #7
  138 000000FC EE860F32        mcr              p15, 4, r0, c6, c2, 1
  139 00000100 E3A00002        mov              r0, #(((0xe6300000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  140 00000104 E34E0630        movt             r0, #(((0xe6300000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  141 00000108 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  142 0000010C E30F0FC1        mov              r0, #(((0xe63fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  143 00000110 E34E063F        movt             r0, #(((0xe63fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  144 00000114 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  145 00000118         
  146 00000118         ; Peripheral
  147 00000118 E3A00008        mov              r0, #8
  148 0000011C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  149 00000120 E3A00002        mov              r0, #(((0xe6400000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  150 00000124 E34E0640        movt             r0, #(((0xe6400000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  151 00000128 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  152 0000012C E30F0FC7        mov              r0, #(((0xeb0fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) :and: 0x0000fff
f)



ARM Macro Assembler    Page 5 


  153 00000130 E34E0B0F        movt             r0, #(((0xeb0fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) >> 16)
  154 00000134 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  155 00000138         
  156 00000138         ; SecROM
  157 00000138 E3A00009        mov              r0, #9
  158 0000013C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  159 00000140 E3A00002        mov              r0, #(((0xeb100000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  160 00000144 E34E0B10        movt             r0, #(((0xeb100000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  161 00000148 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  162 0000014C E30F0FC1        mov              r0, #(((0xeb3fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  163 00000150 E34E0B3F        movt             r0, #(((0xeb3fffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  164 00000154 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  165 00000158         
  166 00000158         ; Peripheral
  167 00000158 E3A0000A        mov              r0, #10
  168 0000015C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  169 00000160 E3A00002        mov              r0, #(((0xeb400000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  170 00000164 E34E0B40        movt             r0, #(((0xeb400000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  171 00000168 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  172 0000016C E30F0FC7        mov              r0, #(((0xecffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) :and: 0x0000fff
f)
  173 00000170 E34E0CFF        movt             r0, #(((0xecffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) >> 16)
  174 00000174 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  175 00000178         
  176 00000178         ; IMP RAM
  177 00000178 E3A0000B        mov              r0, #11
  178 0000017C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  179 00000180 E3A00002        mov              r0, #(((0xed000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  180 00000184 E34E0D00        movt             r0, #(((0xed000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  181 00000188 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  182 0000018C E30F0FC1        mov              r0, #(((0xedffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) :and: 0x0000fff
f)
  183 00000190 E34E0DFF        movt             r0, #(((0xedffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE) >> 16)
  184 00000194 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  185 00000198         
  186 00000198         ; Peripheral
  187 00000198 E3A0000C        mov              r0, #12
  188 0000019C EE860F32        mcr              p15, 4, r0, c6, c2, 1
  189 000001A0 E3A00002        mov              r0, #(((0xee000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) :and: 0x0000ffff)
  190 000001A4 E34E0E00        movt             r0, #(((0xee000000 :and: (:not:
(0x1 << 5))) :or: NON_SHAREABLE :or: RW) >> 16)
  191 000001A8 EE860F13        mcr              p15, 4, r0, c6, c3, 0
  192 000001AC E30F0FC7        mov              r0, #(((0xffffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) :and: 0x0000fff



ARM Macro Assembler    Page 6 


f)
  193 000001B0 E34F0FFF        movt             r0, #(((0xffffffff :and: (:not:
(0x3f) :and: (:not:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE) >> 16)
  194 000001B4 EE860F33        mcr              p15, 4, r0, c6, c3, 1
  195 000001B8         
  196 000001B8         ; Enable EL2 MPU
  197 000001B8 EE910F10        mrc              p15, 4, r0, c1, c0, 0
  198 000001BC E3800001        orr              r0, r0, #0x1
  199 000001C0 F57FF04F        dsb
  200 000001C4 EE810F10        mcr              p15, 4, r0, c1, c0, 0
  201 000001C8 F57FF06F        isb
  202 000001CC         
  203 000001CC E12FFF1E        bx               lr
  204 000001D0         
  205 000001D0         __mpu_init_el1
  206 000001D0         
  207 000001D0         ;    ; Define memory regions attribute
  208 000001D0         ;    ; Attribute 0: 0xff Normal, Outer write-back non-tr
                       ansient, RW allocate, Inner write-back non-transient
  209 000001D0         ;    ; Attribute 1: 0x04 Device, nGnRE
  210 000001D0         ;    ; Attribute 2: 0x44 Normal, Outer non-cacheable, In
                       ner non-cacheable
  211 000001D0         ;    ldr r0, = 0x444404ff
  212 000001D0         ;    mcr p15, 4, r0, c10, c2, 0
  213 000001D0         ;    ldr r0, = 0xddeebb00
  214 000001D0         ;    mcr p15, 4, r0, c10, c2, 1
  215 000001D0         ;
  216 000001D0         ;    ; BSC
  217 000001D0         ;    mov r0, #0
  218 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  219 000001D0         ;    ldr r0, = (0x00000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  220 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  221 000001D0         ;    ldr r0, = (0x07ffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  222 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  223 000001D0         ;
  224 000001D0         ;    ; RPC
  225 000001D0         ;    mov r0, #1
  226 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  227 000001D0         ;    ldr r0, = (0x08000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  228 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  229 000001D0         ;    ldr r0, = (0x0fffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  230 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  231 000001D0         ;
  232 000001D0         ;    ; BSC
  233 000001D0         ;    mov r0, #2
  234 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  235 000001D0         ;    ldr r0, = (0x10000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  236 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  237 000001D0         ;    ldr r0, = (0x1fffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  238 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  239 000001D0         ;
  240 000001D0         ;    ; RPC
  241 000001D0         ;    mov r0, #3



ARM Macro Assembler    Page 7 


  242 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  243 000001D0         ;    ldr r0, = (0x20000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  244 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  245 000001D0         ;    ldr r0, = (0x3fffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  246 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  247 000001D0         ;
  248 000001D0         ;    ; SDRAM
  249 000001D0         ;    mov r0, #4
  250 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  251 000001D0         ;    ldr r0, = (0x40000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  252 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  253 000001D0         ;    ldr r0, = (0xbfffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  254 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  255 000001D0         ;
  256 000001D0         ;    ; PCIE
  257 000001D0         ;    mov r0, #5
  258 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  259 000001D0         ;    ldr r0, = (0xc0000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  260 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  261 000001D0         ;    ldr r0, = (0xdfffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  262 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  263 000001D0         ;
  264 000001D0         ;    ; Peripheral
  265 000001D0         ;    mov r0, #6
  266 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  267 000001D0         ;    ldr r0, = (0xe0000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  268 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  269 000001D0         ;    ldr r0, = (0xe62fffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE
  270 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  271 000001D0         ;
  272 000001D0         ;    ; SRAM
  273 000001D0         ;    mov r0, #7
  274 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  275 000001D0         ;    ldr r0, = (0xe6300000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  276 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  277 000001D0         ;    ldr r0, = (0xe63fffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  278 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  279 000001D0         ;
  280 000001D0         ;    ; Peripheral
  281 000001D0         ;    mov r0, #8
  282 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  283 000001D0         ;    ldr r0, = (0xe6400000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  284 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  285 000001D0         ;    ldr r0, = (0xeb0fffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE
  286 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  287 000001D0         ;
  288 000001D0         ;    ; SecROM



ARM Macro Assembler    Page 8 


  289 000001D0         ;    mov r0, #9
  290 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  291 000001D0         ;    ldr r0, = (0xeb100000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  292 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  293 000001D0         ;    ldr r0, = (0xeb3fffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  294 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  295 000001D0         ;
  296 000001D0         ;    ; Peripheral
  297 000001D0         ;    mov r0, #10
  298 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  299 000001D0         ;    ldr r0, = (0xeb400000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  300 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  301 000001D0         ;    ldr r0, = (0xecffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE
  302 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  303 000001D0         ;
  304 000001D0         ;    ; IMP RAM
  305 000001D0         ;    mov r0, #11
  306 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  307 000001D0         ;    ldr r0, = (0xed000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  308 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  309 000001D0         ;    ldr r0, = (0xedffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR0 :or: REGION_ENABLE
  310 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  311 000001D0         ;
  312 000001D0         ;    ; Peripheral
  313 000001D0         ;    mov r0, #12
  314 000001D0         ;    mcr p15, 0, r0, c6, c2, 1
  315 000001D0         ;    ldr r0, = (0xee000000 :and: (:not:(0x1 << 5))) :or:
                        NON_SHAREABLE :or: RW
  316 000001D0         ;    mcr p15, 0, r0, c6, c3, 0
  317 000001D0         ;    ldr r0, = (0xffffffff :and: (:not:(0x3f) :and: (:no
                       t:(0x3 << 4)))) :or: ATTR3 :or: REGION_ENABLE
  318 000001D0         ;    mcr p15, 0, r0, c6, c3, 1
  319 000001D0         ;
  320 000001D0         ;    ; Enable EL2 MPU
  321 000001D0         ;    mrc p15, 0, r0, c1, c0, 0
  322 000001D0         ;    orr r0, r0, #0x1
  323 000001D0         ;    dsb
  324 000001D0         ;    mcr p15, 0, r0, c1, c0, 0
  325 000001D0         ;    isb
  326 000001D0         
  327 000001D0 E12FFF1E        bx               lr
  328 000001D4         
  329 000001D4                 ENDIF
  330 000001D4         
  331 000001D4                 end
Command Line: --cpu=Cortex-R52 -m -I/design01/rcarv3ufed_master/common_rvc/rcar
v3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/i2c0/full_check -I/design01/rcarv3ufed_maste
r/common_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/include --predefine="__AARC
H32 SETL {TRUE}" --predefine="__USE_DDR SETL {TRUE}" --list=mpu_cr52.list /desi
gn01/rcarv3ufed_master/common_rvc/rcarv3u/VNET1/MASTER_TM/I2C_V3U_RTL/ct/includ
e/rcar_v3u/startup/mpu_cr52.s
